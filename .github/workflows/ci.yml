name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write   # REQUIRED for PR comments


jobs:
  # Lint + type-check via tox (single Python is enough)
  lint-and-types:
    name: Lint & Type (tox)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          pip install tox

      # Expects tox envs named "lint" (ruff) and "type" (mypy)
      - name: Run ruff & mypy via tox
        run: tox -e lint,type
  security:
    name: Security scan (Bandit)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: |
          python -m pip install -U pip bandit pip-audit
          bandit -r src -x tests
          pip-audit -r requirements.txt || true


  # Test matrix across Python versions using tox
  tests:
    name: Tests (tox · py${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13", "3.14"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install tox + tox-gh-actions
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions

      # Runs the tox env matching the current Python (py39/py310/…)
      - name: Run tests via tox
        run: tox

      # Upload coverage.xml produced by pytest in the tox test env
      - name: Upload coverage to Codecov
        if: always()
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          flags: unittests
          fail_ci_if_error: true
          verbose: true
